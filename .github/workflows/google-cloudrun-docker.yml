# Build and Deploy Frontend and Backend to Cloud Run
name: "Build and Deploy to Cloud Run"

on:
  push:
    branches:
      - main

env:
  PROJECT_ID: "arq-final-468222"
  REGION: "europe-west1"
  REGISTRY: "propfinder-app"
  WORKLOAD_IDENTITY_PROVIDER: "projects/559450792153/locations/global/workloadIdentityPools/github-actions/providers/github"

jobs:
  deploy-backend:
    runs-on: "ubuntu-latest"
    outputs:
      backend-url: ${{ steps.deploy-backend.outputs.url }}

    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"

      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v2"
        with:
          workload_identity_provider: "${{ env.WORKLOAD_IDENTITY_PROVIDER }}"
          service_account: "github-actions-sa@arq-final-468222.iam.gserviceaccount.com"

      - name: "Configure Docker to use gcloud as a credential helper"
        run: |-
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

      - name: "Build and Push Backend Container"
        run: |-
          DOCKER_TAG="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REGISTRY }}/backend:${{ github.sha }}"
          docker build --tag "${DOCKER_TAG}" --file ./backend/Dockerfile .
          docker push "${DOCKER_TAG}"

      - name: "Deploy Backend to Cloud Run"
        id: "deploy-backend"
        uses: "google-github-actions/deploy-cloudrun@v2"
        with:
          service: "propfinder-backend"
          region: "${{ env.REGION }}"
          image: "${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REGISTRY }}/backend:${{ github.sha }}"
          env_vars: |
            SUPABASE_URL=${{ secrets.SUPABASE_URL }}
            SUPABASE_SERVICE_ROLE_KEY=${{ secrets.SUPABASE_SERVICE_ROLE_KEY }}
            PAYPAL_CLIENT_ID=${{ secrets.PAYPAL_CLIENT_ID }}
            PAYPAL_CLIENT_SECRET=${{ secrets.PAYPAL_CLIENT_SECRET }}
            PAYPAL_MODE=${{ secrets.PAYPAL_MODE }}
            NODE_ENV=production
          flags: |
            --port=3000
            --memory=512Mi
            --cpu=1
            --min-instances=0
            --max-instances=10
            --allow-unauthenticated

      - name: "Show Backend URL"
        run: echo "Backend deployed at ${{ steps.deploy-backend.outputs.url }}"

  deploy-frontend:
    runs-on: "ubuntu-latest"
    needs: deploy-backend

    permissions:
      contents: "read"
      id-token: "write"

    steps:
      - name: "Checkout"
        uses: "actions/checkout@v4"

      - id: "auth"
        name: "Authenticate to Google Cloud"
        uses: "google-github-actions/auth@v2"
        with:
          workload_identity_provider: "${{ env.WORKLOAD_IDENTITY_PROVIDER }}"
          service_account: "github-actions-sa@arq-final-468222.iam.gserviceaccount.com"

      - name: "Configure Docker to use gcloud as a credential helper"
        run: |-
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

      - name: "Build and Push Frontend Container"
        run: |-
          DOCKER_TAG="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REGISTRY }}/frontend:${{ github.sha }}"
          docker build --tag "${DOCKER_TAG}" \
            --build-arg VITE_SUPABASE_URL=${{ secrets.SUPABASE_URL }} \
            --build-arg VITE_SUPABASE_ANON_KEY=${{ secrets.SUPABASE_ANON_KEY }} \
            --build-arg VITE_BACKEND_URL=${{ needs.deploy-backend.outputs.backend-url }} \
            --build-arg VITE_PAYPAL_CLIENT_ID=${{ secrets.PAYPAL_CLIENT_ID }} \
            --build-arg VITE_PAYPAL_MODE=${{ secrets.PAYPAL_MODE }} \
            ./frontend
          docker push "${DOCKER_TAG}"

      - name: "Deploy Frontend to Cloud Run"
        id: "deploy-frontend"
        uses: "google-github-actions/deploy-cloudrun@v2"
        with:
          service: "propfinder-frontend"
          region: "${{ env.REGION }}"
          image: "${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.REGISTRY }}/frontend:${{ github.sha }}"
          flags: |
            --port=80
            --memory=256Mi
            --cpu=1
            --min-instances=0
            --max-instances=5
            --allow-unauthenticated

      - name: "Show Deployment URLs"
        run: |
          echo "ðŸš€ Deployment complete!"
          echo "Frontend: ${{ steps.deploy-frontend.outputs.url }}"
          echo "Backend: ${{ needs.deploy-backend.outputs.backend-url }}"
          echo "API Docs: ${{ needs.deploy-backend.outputs.backend-url }}/api"
